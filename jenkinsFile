pipeline {
    agent any
    environment {
        DOCKER_HOST = 'tcp://host.docker.internal:2375'
        IMAGE_NAME = 'flask-app'
        CONTAINER_NAME = 'flask-app-container'
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/mushraf771/flask-login-app-jenkins.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}:latest")
                }
            }
        }
        stage('Deploy Docker Container') {
            steps {
                script {
                    // Stop and remove existing container if it exists
                    sh """
                        docker ps -q -f name=${CONTAINER_NAME} | xargs -r docker stop
                        docker ps -a -q -f name=${CONTAINER_NAME} | xargs -r docker rm
                        docker run -d -p 5000:5000 --name ${CONTAINER_NAME} ${IMAGE_NAME}:latest
                    """
                }
            }
        }
    }
    post {
        always {
            echo 'Cleaning up workspace'
            cleanWs()
        }
    }
}